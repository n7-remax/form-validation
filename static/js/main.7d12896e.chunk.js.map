{"version":3,"sources":["App/Support/Support.js","App/Login/InputValidation/InputValidation.js","App/Login/ValidationRules/validationRules.js","App/Login/Login.js","App/Login/ForgotPassword/ForgotPassword.js","App/App.js","serviceWorker.js","index.js"],"names":["Support","className","id","InputValidation","balloonRef","React","createRef","inputRef","state","value","validate","haveError","valueValidationError","TweenMax","to","current","x","yoyo","repeat","_tippy","show","this","onChange","errorHighlight","content","ref","trigger","placement","flipBehavior","maxWidth","props","e","setState","target","error","rules","some","rule","Component","inputEmail","match","inputPassword","length","Login","myInputRef1","myInputRef2","onValidatePress","alert","type","placeholder","ValidationRules","onClick","class","ForgotPassword","inputEl","useRef","App","exact","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d12896e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './support.css';\r\n\r\nfunction Support() {\r\n    return (\r\n        <div className=\"support\" id=\"support\">\r\n            <div className=\"logo-section\">\r\n                <div className=\"logo\"></div>\r\n                <span className=\"label\">Technologies</span>\r\n            </div>\r\n            <div>\r\n                <span>Get how-to help and instructions or specific feutures in</span>\r\n            </div>\r\n            <div className=\"buttons-place\">\r\n                <div className=\"button\">help center</div>\r\n                <span className=\"or\">or</span>\r\n                <div className=\"button\">support</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Support;\r\n","import React, { Component } from 'react';\r\nimport { TweenMax } from \"gsap\";\r\nimport 'gsap/CSSPlugin'\r\nimport Tippy from '@tippy.js/react';\r\n\r\nimport 'tippy.js/dist/tippy.css';\r\nimport './inputValidation.css'\r\n\r\nclass InputValidation extends Component {\r\n    balloonRef = React.createRef();\r\n\r\n    inputRef = React.createRef();\r\n\r\n    state = { value: '' };\r\n\r\n    validate = () => {\r\n        const haveError = !!this.valueValidationError;\r\n        if (haveError){\r\n            TweenMax.to(this.inputRef.current, 0.12, { x: \"+10\", yoyo: true, repeat: 5 });\r\n            TweenMax.to(this.inputRef.current, 0.12, { x: \"-10\", yoyo: true, repeat: 5 });  \r\n            this.balloonRef.current._tippy.show();  \r\n        }\r\n        return !haveError;\r\n    }\r\n\r\n    get valueValidationError() {\r\n        let error = null;\r\n        this.props.rules.some(rule => error = rule(this.state.value));\r\n        return error;\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            valueValidationError, onChange, inputRef, balloonRef,\r\n            state: { value },\r\n        } = this;\r\n\r\n        const errorHighlight = valueValidationError && value\r\n\r\n        return (\r\n            <Tippy content={valueValidationError} ref={balloonRef} trigger='manual' placement='right' flipBehavior={['right','bottom']} maxWidth={150}>\r\n                <input\r\n                    {...this.props}\r\n                    className={`custom-input ${errorHighlight ? 'input-error' : ''}`}\r\n                    ref={inputRef}\r\n                    value={value}\r\n                    onChange={e => this.setState({ value: e.target.value })}\r\n                />\r\n                {/* <div>{valueValidationError}</div> */}\r\n            </Tippy>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputValidation\r\n","const inputEmail = [\r\n    e => !e && 'Oops! It\\'s empty',\r\n    e => !e.match(/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/) && 'Oops! Invalid email',\r\n  ];\r\n  const inputPassword = [\r\n    e => !e && 'Oops! It\\'s empty',\r\n    e => e.length < 8 && 'Oops! You entered an invalid password',\r\n  ];\r\n\r\n  export default {inputEmail,inputPassword}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport InputValidation from './InputValidation/InputValidation'\r\nimport ValidationRules from './ValidationRules/validationRules'\r\n\r\nimport \"./login.css\"\r\n\r\nclass Login extends Component {\r\n\r\n    myInputRef1 = React.createRef();\r\n    myInputRef2 = React.createRef();\r\n\r\n    onValidatePress = () => {\r\n        const isAllFiedsValid = true\r\n            & this.myInputRef1.current.validate()\r\n            & this.myInputRef2.current.validate();\r\n\r\n        if (isAllFiedsValid) alert('all fields valid');\r\n    }\r\n\r\n    render() {\r\n        const { myInputRef1, myInputRef2, onValidatePress } = this;\r\n\r\n        return (\r\n            <div className=\"login\" id=\"login\">\r\n                <div className=\"sign-in-section\">\r\n                    <div className=\"welcome\">\r\n                        <h2>Welcome Back</h2>\r\n                        <span>Sign in to continue to IO Technologies</span>\r\n                    </div>\r\n                    <div className=\"form-section\">\r\n                        <form className=\"form\">\r\n                            <InputValidation type=\"email\" placeholder=\"Your email\" ref={myInputRef1} rules={ValidationRules.inputEmail} />\r\n                            <InputValidation type=\"password\" placeholder=\"Password\" ref={myInputRef2} rules={ValidationRules.inputPassword} />\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"confirm-place\">\r\n                        <div onClick={onValidatePress} className=\"confirm-button\">LOG IN<span class=\"arrow\"> &#10230;</span></div>\r\n                    </div>\r\n                    <div className=\"forgot-password-place\">\r\n                        <span>Forgot your password? <Link to=\"/forgot-password\">Reset</Link></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, { useRef } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport InputValidation from '../InputValidation/InputValidation'\r\nimport ValidationRules from '../ValidationRules/validationRules'\r\n\r\n\r\nimport './forgotpassword.css'\r\n\r\n\r\nfunction ForgotPassword() {\r\n    const inputEl = useRef(null);\r\n    const onButtonClick = () => {\r\n        inputEl.current.validate();\r\n    }\r\n    return (\r\n        <div className=\"forgot-password\" id=\"forgot-password\">\r\n            <div className=\"forgot-container\">\r\n                <div className=\"arrow-place\">\r\n                    <Link to=\"/form-validation\">&#129120;</Link>\r\n                </div>\r\n                <div className=\"heading\">\r\n                    <h2>Forgot password?</h2>\r\n                </div>\r\n                <div className=\"form-section\">\r\n                    <form className=\"form\">\r\n                        <InputValidation type=\"email\" placeholder=\"Enter your email\" ref={inputEl} rules={ValidationRules.inputEmail} />\r\n                    </form>\r\n                </div>\r\n                <div className=\"confirm-place\">\r\n                    <div onClick={onButtonClick} className=\"confirm-button\">Send me instructions</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React from 'react';\nimport { Route } from 'react-router-dom'\n\nimport './App.css'\nimport Support from './Support/Support';\nimport Login from './Login/Login';\nimport ForgotPassword from './Login/ForgotPassword/ForgotPassword';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Support/>\n      <Route exact path=\"/form-validation\" render={() => <Login />} />\n      <Route exact path=\"/forgot-password\" render={() => <ForgotPassword />} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}